I"Ë<p>Extension to render Symfony form types directly from a twig template.</p>

<h4 id="formtypetwigextension">FormTypeTwigExtension</h4>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="kn">namespace</span> <span class="nn">AppBundle\Twig</span><span class="p">;</span>

<span class="kn">use</span> <span class="nn">Symfony\Component\Form\FormFactory</span><span class="p">;</span>
<span class="kn">use</span> <span class="nn">Twig_Extension</span><span class="p">;</span>
<span class="kn">use</span> <span class="nn">Twig_SimpleFunction</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">FormTypeTwigExtension</span> <span class="k">extends</span> <span class="nx">Twig_Extension</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$formFactory</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nx">FormFactory</span> <span class="nv">$formFactory</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">formFactory</span> <span class="o">=</span> <span class="nv">$formFactory</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getFunctions</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="p">[</span>
            <span class="k">new</span> <span class="nx">Twig_SimpleFunction</span><span class="p">(</span><span class="s1">'form_type'</span><span class="p">,</span> <span class="p">[</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">'formType'</span><span class="p">]),</span>
        <span class="p">];</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">formType</span><span class="p">(</span><span class="nv">$formType</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">formFactory</span><span class="o">-&gt;</span><span class="na">create</span><span class="p">(</span><span class="nv">$formType</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">createView</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getName</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="s1">'form_type_extension'</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="formtypetwigextensiontest">FormTypeTwigExtensionTest</h4>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="kn">namespace</span> <span class="nn">AppBundle\Twig</span><span class="p">;</span>

<span class="kn">use</span> <span class="nn">Calva\ExamplesBundle\Twig\FormTypeTwigExtension</span><span class="p">;</span>
<span class="kn">use</span> <span class="nn">Symfony\Bundle\FrameworkBundle\Test\KernelTestCase</span><span class="p">;</span>
<span class="kn">use</span> <span class="nn">Symfony\Component\Form\FormView</span><span class="p">;</span>
<span class="kn">use</span> <span class="nn">Twig_Extension</span><span class="p">;</span>
<span class="kn">use</span> <span class="nn">Twig_SimpleFunction</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">FormTypeTwigExtensionTest</span> <span class="k">extends</span> <span class="nx">KernelTestCase</span>
<span class="p">{</span>
    <span class="cd">/** @var FormTypeTwigExtension */</span>
    <span class="k">private</span> <span class="nv">$sut</span><span class="p">;</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">setUp</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nx">self</span><span class="o">::</span><span class="na">bootKernel</span><span class="p">();</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">sut</span> <span class="o">=</span> <span class="nx">self</span><span class="o">::</span><span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">'twig.extension.form_type'</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">testShouldBeInstanceOfTwigExtension</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertInstanceOf</span><span class="p">(</span><span class="nx">Twig_Extension</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">sut</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">testShouldReturnInstanceOfFormView</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertInstanceOf</span><span class="p">(</span>
            <span class="nx">FormView</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">sut</span><span class="o">-&gt;</span><span class="na">formType</span><span class="p">(</span><span class="s1">'Calva\ExamplesBundle\Form\ExampleFormType'</span><span class="p">)</span>
        <span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">testShouldReturnOneTwigFunction</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">sut</span><span class="o">-&gt;</span><span class="na">getFunctions</span><span class="p">()));</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertInstanceOf</span><span class="p">(</span><span class="nx">Twig_SimpleFunction</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">sut</span><span class="o">-&gt;</span><span class="na">getFunctions</span><span class="p">()[</span><span class="mi">0</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">testShouldReturnCorrectName</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertSame</span><span class="p">(</span><span class="s1">'form_type_extension'</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">sut</span><span class="o">-&gt;</span><span class="na">getName</span><span class="p">());</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
:ET